module vaarg1

export function $foo { ; returns: rax
  %ap = slot 24, align 8
  %r = slot 16, align 8
  %10 = slot 176, align 16
  %26 = slot 16, align 8
@24:
  mov %16:b, al ; @25
  mov %i:l, rdi ; @126
  mov qword ptr [%10 + 0x8], rsi ; @26
  mov qword ptr [%10 + 0x10], rdx ; @28
  mov qword ptr [%10 + 0x18], rcx ; @30
  mov qword ptr [%10 + 0x20], r8 ; @32
  mov qword ptr [%10 + 0x28], r9 ; @34
  test %16:b, %16:b ; @121
  je @2 ; @122
  jmp @23 ; @123
@23:
  movdqa xmmword ptr [%10 + 0x30], xmm0 ; @37
  movdqa xmmword ptr [%10 + 0x40], xmm1 ; @39
  movdqa xmmword ptr [%10 + 0x50], xmm2 ; @41
  movdqa xmmword ptr [%10 + 0x60], xmm3 ; @43
  movdqa xmmword ptr [%10 + 0x70], xmm4 ; @45
  movdqa xmmword ptr [%10 + 0x80], xmm5 ; @47
  movdqa xmmword ptr [%10 + 0x90], xmm6 ; @49
  movdqa xmmword ptr [%10 + 0xa0], xmm7 ; @51
  jmp @2 ; @120
@2:
  mov dword ptr [%ap], 0x8_w ; @58
  mov dword ptr [%ap + 0x4], 0x30_w ; @60
  lea %32:l, qword ptr [rbp + 0x10] ; @61
  mov qword ptr [%ap + 0x8], %32:l ; @63
  mov qword ptr [%ap + 0x10], %10:l ; @65
  jmp @67 ; @119
@67:
  mov %36:w, dword ptr [%ap + 0x4] ; @73
  cmp %36:w, 0xa0_w ; @114
  jbe @68 ; @115
  jmp @70 ; @116
@68:
  mov %38:w, dword ptr [%ap] ; @75
  cmp %38:w, 0x28_w ; @109
  jbe @69 ; @110
  jmp @70 ; @111
@70:
  mov %49:l, qword ptr [%ap + 0x8] ; @88
  lea %50:l, qword ptr [%49 + 0x8] ; @89
  lea %51:l, qword ptr [%49 + 0x10] ; @90
  mov qword ptr [%ap + 0x8], %51:l ; @91
  mov %52:l, %49:l ; @106
  mov %53:l, %50:l ; @107
  jmp @71 ; @108
@69:
  mov %42:w, %36:w ; zx ; @79
  lea %43:l, qword ptr [%10 + %42*1] ; @80
  mov %44:w, %38:w ; zx ; @81
  lea %45:l, qword ptr [%10 + %44*1] ; @82
  lea %46:w, qword ptr [%36 + 0x10] ; @83
  lea %47:w, qword ptr [%38 + 0x8] ; @84
  mov dword ptr [%ap + 0x4], %46:w ; @85
  mov dword ptr [%ap], %47:w ; @86
  mov %52:l, %43:l ; @103
  mov %53:l, %45:l ; @104
  jmp @71 ; @105
@71:
  mov %54:l, qword ptr [%52] ; @92
  mov qword ptr [%26], %54:l ; @93
  mov %55:l, qword ptr [%53] ; @94
  mov qword ptr [%26 + 0x8], %55:l ; @96
  jmp @66 ; @102
@66:
  mov %27:l, qword ptr [%26] ; @52
  mov qword ptr [%r], %27:l ; @53
  mov %29:l, qword ptr [%26 + 0x8] ; @55
  mov qword ptr [%r + 0x8], %29:l ; @57
  movsd %f1.1:d, qword ptr [%r] ; @6
  movsd %6:d, %f1.1:d ; @19
  addsd %6:d, qword ptr [rip + @99] ; @100
  .fp64 @99, 1.234 ; @101
  cvtsd2si %7:l, %6:d ; @20
  lea %8:l, qword ptr [%29 + %7*1] ; @21
  lea %9:l, qword ptr [%8 + %i*1] ; @22
  mov rax, %9:l ; @97
  ret ; @98
}
