module evenodd

function $abs(w %n/rdi) {
@2:
  %3 = slt.w %n, 0x0_w ; @24
  br %3, @3, @21(%n)
@3:
  %4 = neg.w %n ; @25
  jmp @21(%4)
@21(%0):
  ret rax/%0
}

export function $even(w %n/rdi) {
@7:
  %n.1/w/rax = call $abs(%n/rdi) ; @10
  %5 = eq.w %n.1, 0x0_w ; @26
  br %5, @22(0x1_b), @9
@9:
  %6 = sub.w %n.1, 0x1_w ; @27
  %b.1/b/rax = call $odd(%6/rdi) ; @13
  jmp @22(%b.1)
@22(%1):
  ret rax/%1
}

export function $odd(w %n/rdi) {
@14:
  %n.1/w/rax = call $abs(%n/rdi) ; @17
  %7 = eq.w %n.1, 0x0_w ; @28
  br %7, @23(0x0_b), @16
@16:
  %8 = sub.w %n.1, 0x1_w ; @29
  %b.1/b/rax = call $even(%8/rdi) ; @20
  jmp @23(%b.1)
@23(%2):
  ret rax/%2
}
