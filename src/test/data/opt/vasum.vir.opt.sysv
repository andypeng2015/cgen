module vasum

export function $sum(b %12/rax, w %n/rdi, ...) {
  %ap = slot 24, align 8
  %6 = slot 176, align 16
@22:
  %7 = add.l %6, 0x8_l ; @23
  regstore rsi, %7 ; @24
  %8 = add.l %6, 0x10_l ; @25
  regstore rdx, %8 ; @26
  %9 = add.l %6, 0x18_l ; @27
  regstore rcx, %9 ; @28
  %10 = add.l %6, 0x20_l ; @29
  regstore r8, %10 ; @30
  %11 = add.l %6, 0x28_l ; @31
  regstore r9, %11 ; @32
  %13 = eq.b %12, 0x0_b ; @33
  br %13, @2, @21
@21:
  %14 = add.l %6, 0x30_l ; @34
  regstore xmm0, %14 ; @35
  %15 = add.l %6, 0x40_l ; @36
  regstore xmm1, %15 ; @37
  %16 = add.l %6, 0x50_l ; @38
  regstore xmm2, %16 ; @39
  %17 = add.l %6, 0x60_l ; @40
  regstore xmm3, %17 ; @41
  %18 = add.l %6, 0x70_l ; @42
  regstore xmm4, %18 ; @43
  %19 = add.l %6, 0x80_l ; @44
  regstore xmm5, %19 ; @45
  %20 = add.l %6, 0x90_l ; @46
  regstore xmm6, %20 ; @47
  %21 = add.l %6, 0xa0_l ; @48
  regstore xmm7, %21 ; @49
  jmp @2
@2:
  st.w 0x8_w, %ap ; @50
  %22 = add.l %ap, 0x4_l ; @51
  st.w 0x30_w, %22 ; @52
  %23 = stkargs ; @53
  %24 = add.l %ap, 0x8_l ; @54
  st.l %23, %24 ; @55
  %25 = add.l %ap, 0x10_l ; @56
  st.l %6, %25 ; @57
  jmp @3(0x0_w, 0x0_w)
@3(%x.2, %i.2):
  %3 = lt.w %i.2, %n ; @18
  br %3, @7, @8
@7:
  jmp @59
@59:
  %26 = ld.w %ap ; @63
  %27 = le.w %26, 0x28_w ; @64
  br %27, @60, @61
@60:
  %29 = ld.l %25 ; @66
  %30 = zext.l %26 ; @67
  %31 = add.l %29, %30 ; @68
  %32 = add.w %26, 0x8_w ; @69
  st.w %32, %ap ; @70
  jmp @62(%31)
@61:
  %34 = ld.l %24 ; @72
  %35 = add.l %34, 0x8_l ; @73
  st.l %35, %24 ; @74
  jmp @62(%34)
@62(%36):
  %y.1 = ld.w %36 ; @75
  jmp @58
@58:
  %4 = add.w %x.2, %y.1 ; @19
  %5 = add.w %i.2, 0x1_w ; @20
  jmp @3(%4, %5)
@8:
  ret rax/%x.2
}

export function $twenty_eight() {
@13:
  %x.1/w/rax = call $sum(0x7_w/rdi, 0x1_w/rsi, 0x2_w/rdx, 0x3_w/rcx, 0x4_w/r8, 0x5_w/r9, 0x6_w/+0, 0x7_w/+8, 0x0_b/rax)
  ; @14
  ret rax/%x.1
}
