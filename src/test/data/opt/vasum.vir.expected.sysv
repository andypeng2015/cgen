module vasum

export function $sum(w %n/rdi, ...) {
  %ap = slot 24, align 8
  %3 = slot 176, align 16
@17:
  %4 = add.l %3, 0x8_l ; @18
  st.r rsi, %4 ; @19
  %5 = add.l %3, 0x10_l ; @20
  st.r rdx, %5 ; @21
  %6 = add.l %3, 0x18_l ; @22
  st.r rcx, %6 ; @23
  %7 = add.l %3, 0x20_l ; @24
  st.r r8, %7 ; @25
  %8 = add.l %3, 0x28_l ; @26
  st.r r9, %8 ; @27
  %9 = rld.b rax ; @28
  %10 = eq.b %9, 0x0_b ; @29
  br %10, @2, @16
@16:
  %11 = add.l %3, 0x30_l ; @30
  st.r xmm0, %11 ; @31
  %12 = add.l %3, 0x40_l ; @32
  st.r xmm1, %12 ; @33
  %13 = add.l %3, 0x50_l ; @34
  st.r xmm2, %13 ; @35
  %14 = add.l %3, 0x60_l ; @36
  st.r xmm3, %14 ; @37
  %15 = add.l %3, 0x70_l ; @38
  st.r xmm4, %15 ; @39
  %16 = add.l %3, 0x80_l ; @40
  st.r xmm5, %16 ; @41
  %17 = add.l %3, 0x90_l ; @42
  st.r xmm6, %17 ; @43
  %18 = add.l %3, 0xa0_l ; @44
  st.r xmm7, %18 ; @45
  jmp @2
@2:
  st.w 0x8_w, %ap ; @46
  %19 = add.l %ap, 0x4_l ; @47
  st.w 0x30_w, %19 ; @48
  %20 = stkargs ; @49
  %21 = add.l %ap, 0x8_l ; @50
  st.l %20, %21 ; @51
  %22 = add.l %ap, 0x10_l ; @52
  st.l %3, %22 ; @53
  jmp @3(0x0_w, 0x0_w)
@3(%x.2, %i.2):
  %0 = lt.w %i.2, %n ; @13
  br %0, @7, @8
@7:
  jmp @55
@55:
  %23 = ld.w %ap ; @59
  %24 = le.w %23, 0x28_w ; @60
  br %24, @56, @57
@56:
  %27 = add.l %3, %23 ; @63
  %28 = add.w %23, 0x8_w ; @64
  st.w %28, %ap ; @65
  jmp @58(%27)
@57:
  %30 = ld.l %21 ; @67
  %31 = add.l %30, 0x8_l ; @68
  st.l %31, %21 ; @69
  jmp @58(%30)
@58(%32):
  %y.1 = ld.w %32 ; @70
  jmp @54
@54:
  %1 = add.w %x.2, %y.1 ; @14
  %2 = add.w %i.2, 0x1_w ; @15
  jmp @3(%1, %2)
@8:
  ret rax/%x.2
}
