module vaarg1

export function $foo { ; returns: rax
@19:
  push rbp ; @124
  mov rbp, rsp ; @125
  sub rsp, 0xf0_l ; @126
  mov qword ptr [rbp - 0xe8], rsi ; @21
  mov qword ptr [rbp - 0xe0], rdx ; @23
  mov qword ptr [rbp - 0xd8], rcx ; @25
  mov qword ptr [rbp - 0xd0], r8 ; @27
  mov qword ptr [rbp - 0xc8], r9 ; @29
  test al, al ; @116
  je @2 ; @117
@18:
  movdqa xmmword ptr [rbp - 0xc0], xmm0 ; @32
  movdqa xmmword ptr [rbp - 0xb0], xmm1 ; @34
  movdqa xmmword ptr [rbp - 0xa0], xmm2 ; @36
  movdqa xmmword ptr [rbp - 0x90], xmm3 ; @38
  movdqa xmmword ptr [rbp - 0x80], xmm4 ; @40
  movdqa xmmword ptr [rbp - 0x70], xmm5 ; @42
  movdqa xmmword ptr [rbp - 0x60], xmm6 ; @44
  movdqa xmmword ptr [rbp - 0x50], xmm7 ; @46
@2:
  mov dword ptr [rbp - 0x40], 0x8_w ; @53
  mov dword ptr [rbp - 0x3c], 0x30_w ; @55
  lea rax, qword ptr [rbp + 0x10] ; @56
  mov qword ptr [rbp - 0x38], rax ; @58
  lea rax, qword ptr [rbp - 0xf0] ; @60
  mov qword ptr [rbp - 0x30], rax ; @123
@62:
  mov edx, dword ptr [rbp - 0x3c] ; @68
  cmp edx, 0xa0_w ; @109
  ja @65 ; @110
@63:
  mov esi, dword ptr [rbp - 0x40] ; @70
  cmp esi, 0x28_w ; @104
  jbe @64 ; @105
@65:
  mov rcx, qword ptr [rbp - 0x38] ; @83
  lea rax, qword ptr [rcx + 0x8] ; @84
  lea rdx, qword ptr [rcx + 0x10] ; @85
  mov qword ptr [rbp - 0x38], rdx ; @86
  jmp @66 ; @103
@64:
  mov eax, edx ; zx ; @74
  lea rcx, qword ptr [rbp + rax*1 - 0xf0] ; @75
  mov eax, esi ; zx ; @76
  lea rax, qword ptr [rbp + rax*1 - 0xf0] ; @77
  lea r8d, qword ptr [rdx + 0x10] ; @78
  lea edx, qword ptr [rsi + 0x8] ; @79
  mov dword ptr [rbp - 0x3c], r8d ; @80
  mov dword ptr [rbp - 0x40], edx ; @81
@66:
  mov rcx, qword ptr [rcx] ; @87
  mov qword ptr [rbp - 0x18], rcx ; @88
  mov rax, qword ptr [rax] ; @89
  mov qword ptr [rbp - 0x10], rax ; @91
@61:
  mov rax, qword ptr [rbp - 0x18] ; @47
  mov qword ptr [rbp - 0x28], rax ; @48
  mov rax, qword ptr [rbp - 0x10] ; @50
  mov qword ptr [rbp - 0x20], rax ; @52
  movsd xmm0, qword ptr [rbp - 0x28] ; @6
  addsd xmm0, qword ptr [rip + @94] ; @95
  .fp64 @94, 1.234 ; @96
  cvtsd2si rcx, xmm0 ; @15
  add rax, rcx ; @16
  add rax, rdi ; @17
  leave ; @127
  ret ; @93
}
