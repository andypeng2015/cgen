module qsort

function $swap(l %a, l %b) {
@2:
  %x.1 = ld.w %a ; @3
  %y.1 = ld.w %b ; @4
  st.w %x.1, %b ; @5
  st.w %y.1, %a ; @6
  ret
}

function l $partition(l %arr, l %low, l %high) {
@7:
  %3 = lsl.l %high, 0x2_l ; @49
  %4 = add.l %arr, %3 ; @50
  %pivot.1 = ld.w %4 ; @11
  %6 = sub.l %low, 0x1_l ; @52
  %5 = sub.l %high, 0x1_l ; @51
  jmp @8(%low, %6)
@8(%j.2, %i.2):
  %10 = sle.l %j.2, %5 ; @56
  %7 = add.l %i.2, 0x1_l ; @53
  %8 = lsl.l %7, 0x2_l ; @54
  %9 = add.l %arr, %8 ; @55
  br %10, @14, @15
@14:
  %11 = lsl.l %j.2, 0x2_l ; @57
  %12 = add.l %arr, %11 ; @58
  %j_val.1 = ld.w %12 ; @22
  %13 = sle.w %j_val.1, %pivot.1 ; @59
  br %13, @18, @19(%i.2)
@19(%i.3):
  %14 = add.l %j.2, 0x1_l ; @60
  jmp @8(%14, %i.3)
@18:
  call $swap(%9, %12) ; @30
  jmp @19(%7)
@15:
  call $swap(%9, %4) ; @36
  ret %7
}

export function $qsort(l %arr, l %low, l %high) {
@48:
  jmp @38(%low)
@38(%1):
  %15 = slt.l %1, %high ; @61
  br %15, @39, @47
@39:
  %p.1 = call.l $partition(%arr, %1, %high) ; @42
  %16 = sub.l %p.1, 0x1_l ; @62
  call $qsort(%arr, %1, %16) ; @44
  %17 = add.l %p.1, 0x1_l ; @63
  jmp @38(%17)
@47:
  ret
}
