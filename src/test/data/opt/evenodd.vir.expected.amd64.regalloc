module evenodd

function $abs { ; returns: rax
@2:
  sub rsp, 0x8_l ; @88
  mov eax, edi ; @42
  test eax, eax ; @39
  jns @21 ; @40
@3:
  neg eax ; @36
@21:
  add rsp, 0x8_l ; @89
  ret ; @32
}

export function $even { ; returns: rax
@7:
  push rbp ; @90
  mov rbp, rsp ; @91
  call $abs ; rdi ; @65
  test eax, eax ; @57
  jne @9 ; @58
@46:
  mov al, 0x1_b ; @55
  jmp @22 ; @56
@9:
  lea edi, qword ptr [rax - 0x1] ; @54
  call $odd ; rdi ; @52
@22:
  leave ; @92
  ret ; @48
}

export function $odd { ; returns: rax
@14:
  push rbp ; @93
  mov rbp, rsp ; @94
  call $abs ; rdi ; @86
  test eax, eax ; @78
  jne @16 ; @79
@67:
  xor al, al ; @76
  jmp @23 ; @77
@16:
  lea edi, qword ptr [rax - 0x1] ; @75
  call $even ; rdi ; @73
@23:
  leave ; @95
  ret ; @69
}
