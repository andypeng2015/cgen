module analyze_array

function $max { ; returns: rax
@2:
  mov eax, esi ; @130
  cmp edi, esi ; @128
  cmovg eax, edi ; @129
  ret ; @127
}

function $min { ; returns: rax
@6:
  mov eax, esi ; @138
  cmp edi, esi ; @136
  cmovl eax, edi ; @137
  ret ; @135
}

function $square { ; returns: rax
@10:
  mov eax, edi ; @144
  imul eax, edi ; @145
  ret ; @143
}

export function $analyze_array { ; returns: rax
@12:
  push rbp ; @216
  mov rbp, rsp ; @217
  sub rsp, 0x18_l ; @218
  push r12 ; @219
  push r13 ; @220
  push r14 ; @221
  push r15 ; @222
  push rbx ; @223
  mov r15, rdi ; @15
  mov dword ptr [rbp - 0xc], esi ; @210
  mov edi, dword ptr [r15] ; @177
  mov dword ptr [rbp - 0x10], 0x0_w ; @211
  mov ebx, edi ; @172
  xor r14d, r14d ; @174
@13:
  cmp r14d, dword ptr [rbp - 0xc] ; @166
  jl @18 ; @167
@19:
  sub edi, ebx ; @165
  call $square ; rdi ; @163
  add eax, dword ptr [rbp - 0x10] ; @102
  pop rbx ; @224
  pop r15 ; @225
  pop r14 ; @226
  pop r13 ; @227
  pop r12 ; @228
  leave ; @229
  ret ; @162
@18:
  mov eax, r14d ; zx ; @103
  mov r12d, dword ptr [r15 + rax*4] ; @24
  mov esi, r12d ; @157
  call $max ; rdi rsi ; @158
  mov r13d, eax ; @159
  mov edi, ebx ; @26
  mov esi, r12d ; @154
  call $min ; rdi rsi ; @155
  mov ebx, eax ; @156
  mov edi, r12d ; @27
  call $square ; rdi ; @152
  mov ecx, r13d ; @107
  sub ecx, ebx ; @151
  add eax, dword ptr [rbp - 0x10] ; @106
  add ecx, eax ; @108
  lea eax, qword ptr [r14 + 0x1] ; @109
  mov dword ptr [rbp - 0x10], ecx ; @215
  mov edi, r13d ; @148
  mov r14d, eax ; @149
  jmp @13 ; @150
}

export function $analyze_array_inl { ; returns: rax
@35:
  mov r8, rdi ; @38
  mov r9d, esi ; @208
  mov esi, dword ptr [r8] ; @209
  xor r10d, r10d ; @203
  mov ecx, esi ; @205
  xor edx, edx ; @206
@36:
  cmp edx, r9d ; @198
  jl @41 ; @199
@42:
  sub ecx, esi ; @197
  imul ecx, ecx ; @196
  lea eax, qword ptr [r10 + rcx*1] ; @113
  ret ; @195
@41:
  mov eax, edx ; zx ; @114
  mov edi, dword ptr [r8 + rax*4] ; @47
  mov eax, edi ; @120
  cmp ecx, edi ; @189
  cmovg eax, ecx ; @190
  mov ecx, edi ; @122
  cmp esi, edi ; @185
  cmovl ecx, esi ; @186
  imul edi, edi ; @184
  mov esi, eax ; @123
  sub esi, ecx ; @183
  add edi, r10d ; @118
  lea r10d, qword ptr [rdi + rsi*1] ; @124
  inc edx ; @125
  mov esi, ecx ; @179
  mov ecx, eax ; @180
  jmp @36 ; @182
}
