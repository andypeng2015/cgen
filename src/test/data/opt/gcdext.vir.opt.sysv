module gcdext

export function $gcd(w %a/rdi, w %b/rsi) {
  %res = slot 16, align 8
  %r = slot 16, align 8
  %15 = slot 16, align 8
  %20 = slot 16, align 8
  %25 = slot 16, align 8
@2:
  %8 = add.l %res, 0x4_l ; @37
  %9 = add.l %res, 0x8_l ; @38
  %10 = eq.w %a, 0x0_w ; @39
  br %10, @3, @4
@3:
  st.w %b, %res ; @6
  st.w 0x0_w, %8 ; @8
  st.w 0x1_w, %9 ; @10
  %26 = ld.l %res ; @56
  st.l %26, %25 ; @57
  %28 = ld.l %9 ; @59
  %29 = add.l %25, 0x8_l ; @60
  st.l %28, %29 ; @61
  jmp @29(%25)
@4:
  %m.1 = rem.w %b, %a ; @12
  %34/l/rax, %35/l/rdx = call $gcd(%m.1/rdi, %a/rsi) ; @13
  %33 = add.l %15, 0x8_l ; @65
  st.l %34, %15 ; @66
  st.l %35, %33 ; @67
  %16 = ld.l %15 ; @44
  st.l %16, %r ; @45
  %18 = ld.l %33 ; @47
  %19 = add.l %r, 0x8_l ; @48
  st.l %18, %19 ; @49
  %rg.1 = ld.w %r ; @15
  %11 = add.l %r, 0x4_l ; @40
  %rx.1 = ld.w %11 ; @17
  %ry.1 = ld.w %19 ; @19
  st.w %rg.1, %res ; @20
  %nx.1 = div.w %b, %a ; @21
  %13 = mul.w %nx.1, %rx.1 ; @42
  %14 = sub.w %ry.1, %13 ; @43
  st.w %14, %8 ; @25
  st.w %rx.1, %9 ; @27
  %21 = ld.l %res ; @50
  st.l %21, %20 ; @51
  %23 = ld.l %9 ; @53
  %24 = add.l %20, 0x8_l ; @54
  st.l %23, %24 ; @55
  jmp @29(%20)
@29(%0):
  %30 = ld.l %0 ; @62
  %31 = add.l %0, 0x8_l ; @63
  %32 = ld.l %31 ; @64
  ret rax/%30, rdx/%32
}
