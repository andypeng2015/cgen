module vaarg1

export function $foo(b %16/rax, l %i/rdi, ...) {
  %ap = slot 24, align 8
  %r = slot 16, align 8
  %10 = slot 176, align 16
  %26 = slot 16, align 8
@24:
  %11 = add.l %10, 0x8_l ; @25
  regstore rsi, %11 ; @26
  %12 = add.l %10, 0x10_l ; @27
  regstore rdx, %12 ; @28
  %13 = add.l %10, 0x18_l ; @29
  regstore rcx, %13 ; @30
  %14 = add.l %10, 0x20_l ; @31
  regstore r8, %14 ; @32
  %15 = add.l %10, 0x28_l ; @33
  regstore r9, %15 ; @34
  %17 = eq.b %16, 0x0_b ; @35
  br %17, @2, @23
@23:
  %18 = add.l %10, 0x30_l ; @36
  regstore xmm0, %18 ; @37
  %19 = add.l %10, 0x40_l ; @38
  regstore xmm1, %19 ; @39
  %20 = add.l %10, 0x50_l ; @40
  regstore xmm2, %20 ; @41
  %21 = add.l %10, 0x60_l ; @42
  regstore xmm3, %21 ; @43
  %22 = add.l %10, 0x70_l ; @44
  regstore xmm4, %22 ; @45
  %23 = add.l %10, 0x80_l ; @46
  regstore xmm5, %23 ; @47
  %24 = add.l %10, 0x90_l ; @48
  regstore xmm6, %24 ; @49
  %25 = add.l %10, 0xa0_l ; @50
  regstore xmm7, %25 ; @51
  jmp @2
@2:
  st.w 0x8_w, %ap ; @58
  %31 = add.l %ap, 0x4_l ; @59
  st.w 0x30_w, %31 ; @60
  %32 = stkargs ; @61
  %33 = add.l %ap, 0x8_l ; @62
  st.l %32, %33 ; @63
  %34 = add.l %ap, 0x10_l ; @64
  st.l %10, %34 ; @65
  jmp @67
@67:
  %36 = ld.w %31 ; @73
  %37 = le.w %36, 0xa0_w ; @74
  br %37, @68, @70
@68:
  %38 = ld.w %ap ; @75
  %39 = le.w %38, 0x28_w ; @76
  br %39, @69, @70
@69:
  %42 = zext.l %36 ; @79
  %43 = add.l %10, %42 ; @80
  %44 = zext.l %38 ; @81
  %45 = add.l %10, %44 ; @82
  %46 = add.w %36, 0x10_l ; @83
  %47 = add.w %38, 0x8_l ; @84
  st.w %46, %31 ; @85
  st.w %47, %ap ; @86
  jmp @71(%43, %45)
@70:
  %49 = ld.l %33 ; @88
  %50 = add.l %49, 0x8_l ; @89
  %51 = add.l %49, 0x10_l ; @90
  st.l %51, %33 ; @91
  jmp @71(%49, %50)
@71(%52, %53):
  %54 = ld.l %52 ; @92
  st.l %54, %26 ; @93
  %55 = ld.l %53 ; @94
  %56 = add.l %26, 0x8_l ; @95
  st.l %55, %56 ; @96
  jmp @66
@66:
  %27 = ld.l %26 ; @52
  st.l %27, %r ; @53
  %29 = ld.l %56 ; @55
  %30 = add.l %r, 0x8_l ; @56
  st.l %29, %30 ; @57
  %f1.1 = ld.d %r ; @6
  %6 = add.d %f1.1, 1.234_d ; @19
  %7 = ftosi.d.l %6 ; @20
  %8 = add.l %29, %7 ; @21
  %9 = add.l %8, %i ; @22
  ret rax/%9
}
