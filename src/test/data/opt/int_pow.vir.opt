module int_pow

export function l $int_pow(l %base, l %exponent) {
@2:
  jmp @3(0x1_l, 0x1_l, %base, %exponent)
@3(%ret.2, %mul3.2, %mul1.2, %exponent.1):
  %15 = ne.l %exponent.1, 0x0_l ; @42
  br %15, @9, @10
@9:
  %19 = and.l %exponent.1, 0x3_l ; @46
  %16 = mul.l %mul1.2, %mul3.2 ; @43
  %18 = mul.l %16, %16 ; @45
  %17 = mul.l %ret.2, %16 ; @44
  switch.l %19, @21(%ret.2) [0x1_l -> @21(%17),
                             0x2_l -> @15,
                             0x3_l -> @16]
@15:
  %23 = mul.l %17, %16 ; @50
  jmp @21(%23)
@16:
  %22 = mul.l %17, %18 ; @49
  jmp @21(%22)
@21(%ret.3):
  %20 = mul.l %18, %16 ; @47
  %21 = asr.l %exponent.1, 0x2_l ; @48
  jmp @3(%ret.3, %20, %16, %21)
@10:
  ret %ret.2
}
