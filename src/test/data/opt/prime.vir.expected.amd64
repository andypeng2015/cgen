module foo

export function $foo { ; returns: rax
@2:
  mov %n:w, edi ; @127
  cmp %n:w, 0x1_w ; @124
  jbe @44 ; @125
  jmp @4 ; @126
@44:
  xor %0:w, %0:w ; @122
  jmp @28 ; @123
@4:
  cmp %n:w, 0x3_w ; @117
  jbe @45 ; @118
  jmp @7 ; @119
@45:
  mov %0:w, 0x1_w ; @115
  jmp @28 ; @116
@7:
  test %n:w, 0x1_w ; @108
  je @46 ; @109
  jmp @9 ; @110
@46:
  mov %0:w, 0x1_w ; @106
  jmp @28 ; @107
@9:
  mov eax, 0x55555556_w ; @103
  mul %n:w ; @104
  mov %5:w, edx ; @105
  lea %7:w, qword ptr [%5 + %5*2] ; @100
  mov %8:w, %n:w ; @98
  sub %8:w, %7:w ; @99
  test %8:w, %8:w ; @93
  je @47 ; @94
  jmp @48 ; @95
@47:
  mov %0:w, 0x1_w ; @91
  jmp @28 ; @92
@48:
  mov %i.2:w, 0x5_w ; @89
  jmp @15 ; @90
@15:
  mov %10:w, %i.2:w ; @87
  imul %10:w, %i.2:w ; @88
  cmp %10:w, %n:w ; @82
  jbe @17 ; @83
  jmp @49 ; @84
@49:
  mov %0:w, 0x1_w ; @80
  jmp @28 ; @81
@17:
  mov eax, %n:w ; @76
  xor edx, edx ; @77
  div %i.2:w ; @78
  mov %r.3:w, edx ; @79
  test %r.3:w, %r.3:w ; @71
  je @50 ; @72
  jmp @20 ; @73
@50:
  xor %0:w, %0:w ; @69
  jmp @28 ; @70
@20:
  lea %13:w, qword ptr [%i.2 + 0x2] ; @68
  mov eax, %n:w ; @64
  xor edx, edx ; @65
  div %13:w ; @66
  mov %r.4:w, edx ; @67
  test %r.4:w, %r.4:w ; @59
  je @51 ; @60
  jmp @23 ; @61
@51:
  xor %0:w, %0:w ; @57
  jmp @28 ; @58
@28:
  mov eax, %0:w ; @55
  ret ; @56
@23:
  lea %15:w, qword ptr [%i.2 + 0x6] ; @54
  mov %i.2:w, %15:w ; @52
  jmp @15 ; @53
}
