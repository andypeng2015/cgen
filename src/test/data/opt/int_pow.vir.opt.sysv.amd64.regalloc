module int_pow

export function $int_pow { ; returns: rax
@2:
  mov r8, rdi ; @145
  mov rdx, rsi ; @146
  mov eax, 0x1_w ; @147
  mov edi, 0x1_w ; @148
@3:
  test rdx, rdx ; @140
  jne @9 ; @141
@10:
  ret ; @139
@9:
  mov rcx, rdx ; @86
  and rcx, 0x3_l ; @137
  imul r8, rdi ; @136
  mov rdi, r8 ; @85
  imul rdi, r8 ; @135
  mov rsi, rax ; @84
  imul rsi, r8 ; @134
  test rcx, rcx ; @123
  je @21 ; @124
  dec rcx ; @126
  cmp rcx, 0x2_l ; @127
  ja @21 ; @128
  lea r9, qword ptr [rip + @122] ; @129
  movsxd rcx, dword ptr [r9 + rcx*4] ; @130
  add rcx, r9 ; @131
  jmp rcx ; @132
  .tbl @122 [@104, @15, @16] ; @133
@104:
  mov rax, rsi ; @118
  jmp @21 ; @119
@16:
  imul rsi, rdi ; @117
  mov rax, rsi ; @115
  jmp @21 ; @116
@15:
  imul rsi, r8 ; @114
  mov rax, rsi ; @112
@21:
  imul rdi, r8 ; @111
  sar rdx, 0x2_b ; @110
  jmp @3 ; @109
}

export function $int_pow_alt { ; returns: rax
@27:
  sub rsp, 0x28_l ; @174
  mov qword ptr [rsp], 0x1_l ; @173
  mov qword ptr [rsp + 0x8], rdi ; @32
  mov qword ptr [rsp + 0x18], 0x1_l ; @34
  mov eax, 0x1_w ; @169
@28:
  test rsi, rsi ; @164
  jne @35 ; @165
@36:
  add rsp, 0x28_l ; @175
  ret ; @163
@35:
  mov rdx, qword ptr [rsp + 0x8] ; @41
  mov rcx, qword ptr [rsp + 0x18] ; @42
  imul rdx, rcx ; @161
  mov qword ptr [rsp + 0x8], rdx ; @44
  mov rcx, rdx ; @96
  imul rcx, rdx ; @160
  mov qword ptr [rsp + 0x10], rcx ; @46
  imul rcx, rdx ; @159
  mov qword ptr [rsp + 0x18], rcx ; @48
  mov rcx, rsi ; @98
  and rcx, 0x3_l ; @158
  mov rcx, qword ptr [rsp + rcx*8] ; @52
  imul rax, rcx ; @156
  sar rsi, 0x2_b ; @155
  jmp @28 ; @154
}
