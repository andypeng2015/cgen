module int_pow

export function $int_pow { ; returns: rax
@2:
  mov rax, rdi ; @145
  mov edx, 0x1_w ; @147
  mov edi, 0x1_w ; @148
@3:
  test rsi, rsi ; @140
  jne @9 ; @141
@10:
  mov rax, rdx ; @138
  ret ; @139
@9:
  mov rcx, rsi ; @86
  and rcx, 0x3_l ; @137
  imul rax, rdi ; @136
  mov rdi, rax ; @85
  imul rdi, rax ; @135
  mov r8, rdx ; @84
  imul r8, rax ; @134
  test rcx, rcx ; @123
  je @103 ; @124
  dec rcx ; @126
  cmp rcx, 0x2_l ; @127
  ja @103 ; @128
  lea r9, qword ptr [rip + @122] ; @129
  movsxd rcx, dword ptr [r9 + rcx*4] ; @130
  add rcx, r9 ; @131
  jmp rcx ; @132
  .tbl @122 [@21, @15, @16] ; @133
@103:
  mov r8, rdx ; @120
  jmp @21 ; @121
@16:
  imul r8, rdi ; @117
  jmp @21 ; @116
@15:
  imul r8, rax ; @114
@21:
  imul rdi, rax ; @111
  sar rsi, 0x2_b ; @110
  mov rdx, r8 ; @105
  jmp @3 ; @109
}

export function $int_pow_alt { ; returns: rax
@27:
  sub rsp, 0x28_l ; @174
  mov qword ptr [rsp], 0x1_l ; @173
  mov qword ptr [rsp + 0x8], rdi ; @32
  mov qword ptr [rsp + 0x18], 0x1_l ; @34
  mov eax, 0x1_w ; @169
@28:
  test rsi, rsi ; @164
  jne @35 ; @165
@36:
  add rsp, 0x28_l ; @175
  ret ; @163
@35:
  mov rcx, qword ptr [rsp + 0x8] ; @41
  imul rcx, qword ptr [rsp + 0x18] ; @161
  mov qword ptr [rsp + 0x8], rcx ; @44
  mov rdx, rcx ; @96
  imul rdx, rcx ; @160
  mov qword ptr [rsp + 0x10], rdx ; @46
  imul rdx, rcx ; @159
  mov qword ptr [rsp + 0x18], rdx ; @48
  mov rcx, rsi ; @98
  and rcx, 0x3_l ; @158
  mov rcx, qword ptr [rsp + rcx*8] ; @52
  imul rax, rcx ; @156
  sar rsi, 0x2_b ; @155
  jmp @28 ; @154
}
