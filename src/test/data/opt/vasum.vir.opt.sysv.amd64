module vasum

export function $sum { ; returns: rax
  %ap = slot 24, align 8
  %3 = slot 176, align 16
@19:
  mov %9:b, al ; @20
  mov %n:w, edi ; @103
  mov qword ptr [%3 + 0x8], rsi ; @21
  mov qword ptr [%3 + 0x10], rdx ; @23
  mov qword ptr [%3 + 0x18], rcx ; @25
  mov qword ptr [%3 + 0x20], r8 ; @27
  mov qword ptr [%3 + 0x28], r9 ; @29
  test %9:b, %9:b ; @98
  je @2 ; @99
  jmp @18 ; @100
@18:
  movdqa xmmword ptr [%3 + 0x30], xmm0 ; @32
  movdqa xmmword ptr [%3 + 0x40], xmm1 ; @34
  movdqa xmmword ptr [%3 + 0x50], xmm2 ; @36
  movdqa xmmword ptr [%3 + 0x60], xmm3 ; @38
  movdqa xmmword ptr [%3 + 0x70], xmm4 ; @40
  movdqa xmmword ptr [%3 + 0x80], xmm5 ; @42
  movdqa xmmword ptr [%3 + 0x90], xmm6 ; @44
  movdqa xmmword ptr [%3 + 0xa0], xmm7 ; @46
  jmp @2 ; @97
@2:
  mov dword ptr [%ap], 0x8_w ; @47
  mov dword ptr [%ap + 0x4], 0x30_w ; @49
  lea %20:l, qword ptr [rbp + 0x10] ; @50
  mov qword ptr [%ap + 0x8], %20:l ; @52
  mov qword ptr [%ap + 0x10], %3:l ; @54
  xor %x.2:w, %x.2:w ; @94
  xor %i.2:w, %i.2:w ; @95
  jmp @3 ; @96
@3:
  cmp %i.2:w, %n:w ; @89
  jb @7 ; @90
  jmp @8 ; @91
@8:
  mov eax, %x.2:w ; @87
  ret ; @88
@7:
  jmp @56 ; @86
@56:
  mov %23:w, dword ptr [%ap] ; @60
  cmp %23:w, 0x28_w ; @81
  jbe @57 ; @82
  jmp @58 ; @83
@58:
  mov %31:l, qword ptr [%ap + 0x8] ; @69
  lea %32:l, qword ptr [%31 + 0x8] ; @70
  mov qword ptr [%ap + 0x8], %32:l ; @71
  mov %33:l, %31:l ; @79
  jmp @59 ; @80
@57:
  mov %27:w, %23:w ; zx ; @64
  lea %28:l, qword ptr [%3 + %27*1] ; @65
  lea %29:w, qword ptr [%23 + 0x8] ; @66
  mov dword ptr [%ap], %29:w ; @67
  mov %33:l, %28:l ; @77
  jmp @59 ; @78
@59:
  mov %y.1:w, dword ptr [%33] ; @72
  jmp @55 ; @76
@55:
  lea %1:w, qword ptr [%x.2 + %y.1*1] ; @16
  lea %2:w, qword ptr [%i.2 + 0x1] ; @17
  mov %x.2:w, %1:w ; @73
  mov %i.2:w, %2:w ; @74
  jmp @3 ; @75
}

export function $twenty_one { ; returns: rax
@13:
  mov edi, 0x6_w ; @14
  mov esi, 0x1_w ; @107
  mov edx, 0x2_w ; @108
  mov ecx, 0x3_w ; @109
  mov r8d, 0x4_w ; @110
  mov r9d, 0x5_w ; @111
  sub rsp, 0x10_l ; @112
  mov dword ptr [rsp + 0x0], 0x6_w ; @113
  xor al, al ; @114
  call $sum ; r8 r9 rax rcx rdi rdx rsi ; @115
  add rsp, 0x10_l ; @116
  mov %x.1:w, eax ; @117
  mov eax, %x.1:w ; @105
  ret ; @106
}
